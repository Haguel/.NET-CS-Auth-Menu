<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PBKDF2.NET</name>
    </assembly>
    <members>
        <member name="T:System.Configuration.PBKDF2Section">
            <summary>
            Represents a PBKDF2 configuration section within a configuration file.
            </summary>
        </member>
        <member name="M:System.Configuration.PBKDF2Section.#ctor">
            <summary>
            Creates and initializes a new instance of System.Security.Cryptography.PBKDF2Section.
            </summary>
        </member>
        <member name="P:System.Configuration.PBKDF2Section.Current">
            <summary>
            Gets the current System.Configuration.PBKDF2Section within the configuration file. If it is not defined within the configuration file, an instance initiaized to default values is returned.
            </summary>
        </member>
        <member name="P:System.Configuration.PBKDF2Section.HashName">
            <summary>
            Gets or sets the default hash name used by the System.Security.Cryptography.PBKDF2 class for deriving keys when no type is specified.
            </summary>
            <remarks>This defaults to "HMACSHA256" if no value is specified within the configuration file.</remarks>
            <returns>The default hash name used by System.Security.Cryptography.PBKDF2 to derive keys.</returns>
            <exception cref="T:System.ArgumentException">value is null or empty. HashName value cannot be set to a null or empty string.</exception>
        </member>
        <member name="P:System.Configuration.PBKDF2Section.IterationCount">
            <summary>
            Gets or sets the default number of iterations used by the System.Security.Cryptography.PBKDF2 class for deriving keys when no iteration count is specified.
            </summary>
            <remarks>This defaults to 1000 iterations if no value is specified within the configuration file.</remarks>
            <returns>The default number of iterations used by System.Security.Cryptography.PBKDF2 to derive keys.</returns>
            <exception cref="T:System.ArgumentException">value is less than 1. IterationCount value must be greater than zero.</exception>
        </member>
        <member name="P:System.Configuration.PBKDF2Section.SaltSize">
            <summary>
            Gets or sets the default salt size used by the System.Security.Cryptography.PBKDF2 class for deriving keys when no salt size is specified.
            </summary>
            <remarks>This defaults to 8 if no value is specified within the configuration file.</remarks>
            <returns>The default salt size used by System.Security.Cryptography.PBKDF2 to derive keys.</returns>
            <exception cref="T:System.ArgumentException">value is less than 8 or greater than 65536. SaltSize value cannot be less than 8 and cannot be greater than 65536.</exception>
        </member>
        <member name="P:System.Configuration.PBKDF2Section.Properties">
            <summary>
            Gets the collection of properties.
            </summary>
            <returns>The System.Configuration.ConfigurationPropertyCollection of properties for the element.</returns>
        </member>
        <member name="T:System.Configuration.PropertyHelper">
            <summary>
            Internal utility/helper class
            </summary>
        </member>
        <member name="P:System.Configuration.PropertyHelper.HashNameValidator">
            <summary>
            Gets a validator for System.Configuration.PBKDF2Section.HashName configuration property values.
            </summary>
        </member>
        <member name="P:System.Configuration.PropertyHelper.IterationCountValidator">
            <summary>
            Gets a validator for System.Configuration.PBKDF2Section.IterationCount configuration property values.
            </summary>
        </member>
        <member name="P:System.Configuration.PropertyHelper.SaltSizeValidator">
            <summary>
            Gets a validator for System.Configuration.PBKDF2Section.SaltSize configuration property values.
            </summary>
        </member>
        <member name="T:System.Security.Cryptography.PBKDF2">
            <summary>
            Implements adaptable password-based key derivation functionality, PBKDF2, by using pseudo-random number generation based on a chosen System.Security.Cryptography.HMAC-derived hashing implementation.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Byte[],System.Int32,System.String)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt, a number of iterations and the name of a System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <param name="hashName">The name of the System.Security.Cryptography.HMAC implementation to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password, salt or algorithm is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Byte[],System.Int32,System.String)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt, a number of iterations and the name of a System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <param name="hashName">The name of the System.Security.Cryptography.HMAC implementation to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password, salt or algorithm is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the specified size, a number of iterations, and the name of a System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <param name="hashName">The name of the System.Security.Cryptography.HMAC implementation to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or algorithm is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the specified size, a number of iterations, and the name of a System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <param name="hashName">The name of the System.Security.Cryptography.HMAC implementation to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or algorithm is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt, a number of iterations and the configured default System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or salt is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt, a number of iterations and the configured default System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or salt is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the specified size, a number of iterations and the configured default System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The size of the salt to generate to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the specified size, a number of iterations and the configured default System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The size of the salt to generate to derive the key.</param>
            <param name="iterations">The number of iterations to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8 or the iterations is less than 1.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Byte[])">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or salt is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a salt and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="salt">The salt to use to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password or salt is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt  of the specified size and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The size of the salt to generate to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the specified size and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <param name="saltSize">The size of the salt to generate to derive the key.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
            <exception cref="T:System.ArgumentException">The salt size is less than 8.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the configured default size and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the System.Security.Cryptography.PBKDF2 class using a password, a generated salt of the configured default size and the configured default number of iterations and System.Security.Cryptography.HMAC hashing implementation to derive the key.
            </summary>
            <param name="password">The password to derive the key for.</param>
            <exception cref="T:System.ArgumentNullException">The password is null.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged resources used by the Syste.Security.Cryptography.PBKDF2 class and optionally releases managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resouces; false to release only unmanaged resources.</param>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.GetBytes(System.Int32)">
            <summary>
            Returns the pseudo-random bytes for this object.
            </summary>
            <param name="cb">The number of pseudo-random key bytes to generate.</param>
            <returns>A byte array filled with pseudo-random key bytes.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">cb must be greater than zero.</exception>
            <exception cref="T:System.ArgumentException">invalid start index or end index of internal buffer.</exception>
        </member>
        <member name="M:System.Security.Cryptography.PBKDF2.Reset">
            <summary>
            Resets the state of the operation.
            </summary>
        </member>
        <member name="P:System.Security.Cryptography.PBKDF2.HashName">
            <summary>
            Gets or sets the name of the hash algorithm to use when deriving the key.
            </summary>
            <returns>The name of the System.Security.Cryptography.HMAC hashing implementation used to derive the key.</returns>
            <exception cref="T:System.InvalidOperationException">value cannot be changed once the operation has begun.</exception>
            <exception cref="T:System.ArgumentNullException">value cannot be null, empty or consist of only whitespace characters.</exception>
        </member>
        <member name="P:System.Security.Cryptography.PBKDF2.IterationCount">
            <summary>
            Gets or sets the number of iterations to use when deriving the key.
            </summary>
            <returns>The number of iterations used to derive the key.</returns>
            <exception cref="T:System.InvalidOperationException">value cannot be changed once the operation has begun.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">value must be greater than zero.</exception>
        </member>
        <member name="P:System.Security.Cryptography.PBKDF2.Password">
            <summary>
            Gets or sets the password to use when deriving the key.
            </summary>
            <returns>The password used to derive the key.</returns>
            <exception cref="T:System.InvalidOperationException">value cannot be changed once the operation has begun.</exception>
            <exception cref="T:System.ArgumentNullException">value cannot be null.</exception>
            <exception cref="T:System.ArgumentException">value must be at least 1 byte in length.</exception>
        </member>
        <member name="P:System.Security.Cryptography.PBKDF2.Salt">
            <summary>
            Gets or sets the salt to use when deriving the key.
            </summary>
            <returns>The salt used to derive the key.</returns>
            <exception cref="T:System.InvalidOperationException">value cannot be changed once the operation has begun.</exception>
            <exception cref="T:System.ArgumentNullException">value cannot be null.</exception>
            <exception cref="T:System.ArgumentException">value must be at least 8 bytes in length.</exception>
        </member>
        <member name="T:System.Security.Cryptography.Utils">
            <summary>
            Internal utility/helper class
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.Utils.GetBigEndianBytes(System.UInt32)">
            <summary>
            Encodes an integer into a 4-byte array, in big endian.
            </summary>
            <param name="i">The integer to encode.</param>
            <returns>array of bytes, in big endian.</returns>
        </member>
        <member name="M:System.Security.Cryptography.Utils.GenerateSalt(System.Int32)">
            <summary>
            Generates a new random salt of the specified size.
            </summary>
            <param name="saltSize">The size of the salt to be generated, in bytes.</param>
            <returns>A new random salt of the specified size.</returns>
            <exception cref="T:System.ArgumentException">A salt must be at least 8 bytes in size.</exception>
        </member>
        <member name="P:System.Security.Cryptography.Utils.StaticRngCryptoService">
            <summary>
            Provides access to a static RngCryptoServiceProvider.
            </summary>
        </member>
    </members>
</doc>
